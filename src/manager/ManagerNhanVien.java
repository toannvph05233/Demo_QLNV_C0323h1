package manager;import model.FullTime;import model.NhanVien;import model.PartTime;import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.Date;import java.util.Scanner;public class ManagerNhanVien {    NhanVien[] nhanViens = new NhanVien[0];    Scanner scanner = new Scanner(System.in);    SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");    public void add(NhanVien nhanVien) {        NhanVien[] arr = new NhanVien[nhanViens.length + 1];        arr[arr.length - 1] = nhanVien;        for (int i = 0; i < nhanViens.length; i++) {            arr[i] = nhanViens[i];        }        nhanViens = arr;    }    public NhanVien createNV(boolean isFullTime) throws ParseException {        System.out.println("Nhập name");        String name = scanner.nextLine();        System.out.println("Nhập phone");        String phone = scanner.nextLine();        System.out.println("Nhập birtDay theo định dạng dd/MM/yyyy");        String date = scanner.nextLine();        Date birtDay = format.parse(date);        if (isFullTime) {            System.out.println("Nhập hệ số lương");            double heSo = Double.parseDouble(scanner.nextLine());            return new FullTime(name, phone, birtDay, heSo);        } else {            System.out.println("Nhập số giờ làm");            int soGio = Integer.parseInt(scanner.nextLine());            return new PartTime(name, phone, birtDay, soGio);        }    }    public void show() {        for (NhanVien nv : nhanViens) {            System.out.println("- Nhân viên là : name = " + nv.getName()                    + " phone = " + nv.getPhone()                    + " birtDay = " + format.format(nv.getBirthDay())                    + (nv instanceof FullTime ? " Hệ số = " + ((FullTime) nv).getHeSo()                    : "Số giờ = " + ((PartTime) nv).getSoGio())            );        }    }    public void tinhLuong(boolean isFulltime) {        if (isFulltime) {            for (NhanVien nv : nhanViens) {                if (nv instanceof FullTime)                    System.out.println("Nhân viên tên " + nv.getName() + " có lương  = " + nv.tinhLuong());            }        } else {            for (NhanVien nv : nhanViens) {                if (nv instanceof PartTime)                    System.out.println("Nhân viên tên " + nv.getName() + " có lương  = " + nv.tinhLuong());            }        }    }    public void sort() {        for (int i = 0; i < nhanViens.length - 1; i++) {            for (int j = i + 1; j < nhanViens.length; j++) {                if (nhanViens[i].getBirthDay().before(nhanViens[j].getBirthDay())){                    NhanVien temp = nhanViens[i];                    nhanViens[i] = nhanViens[j];                    nhanViens[j] = temp;                }            }        }    }}